services:
  frontend:
    build:
      context: ./prod-client
      dockerfile: Dockerfile
    ports:
      - "4173:4173"
    depends_on:
      - backend
    env_file:
      - ./prod-client/.env
    networks:
      - app-network

  admin:
    build:
      context: ./prod-admin
      dockerfile: Dockerfile
    ports:
      - "4174:4173" # Different host port to avoid conflicts
    depends_on:
      - backend
    env_file:
      - ./prod-admin/.env
    networks:
      - app-network

  backend:
    build:
      context: ./prod-server
      dockerfile: Dockerfile
    ports:
      - "4000:4000"
    depends_on:
      - mongodb
    # Fix: Use correct env file path and add fallback
    env_file:
      - ./prod-server/.env.development
    # Alternative: Use environment variables directly if file issues persist
    environment:
      - NODE_ENV=development
      # Add your specific environment variables here if needed
      # - DB_CONNECTION_STRING=mongodb://admin:password123@mongodb:27017/prod-db?authSource=admin
    networks:
      - app-network
    # Add restart policy
    restart: unless-stopped

  mongodb:
    image: mongo:7.0
    container_name: mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: prod-db
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
    networks:
      - app-network
    # Add command to ensure proper authentication setup
    command: mongod --auth

networks:
  app-network:
    driver: bridge

volumes:
  mongodb_data:
    driver: local
  mongodb_config:
    driver: local
